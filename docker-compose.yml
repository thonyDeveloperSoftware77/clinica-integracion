networks:
  clinic-net:

volumes:
  postgres_data:
  mariadb_data:
  nextcloud_data:
  rabbitmq_data:

services:
  # ---------- Bases de datos ----------
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    env_file: .env
    environment:
      POSTGRES_DB: odoo
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d:ro
    networks: [clinic-net]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d odoo"]
      interval: 10s
      timeout: 5s
      retries: 5

  mariadb:
    image: mariadb:10.6
    restart: unless-stopped
    env_file: .env
    environment:
      MYSQL_DATABASE: openmrs
      MYSQL_USER: openmrs
      MYSQL_PASSWORD: ${OPENMRS_DB_PASSWORD}
    volumes:
      - mariadb_data:/var/lib/mysql
    networks: [clinic-net]
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ---------- Aplicaciones núcleo ----------
  openmrs:
    image: openmrs/openmrs-reference-application-distro:2.12.0
    restart: unless-stopped
    environment:
      DB_DATABASE: openmrs
      DB_HOST: mariadb
      DB_USERNAME: openmrs
      DB_PASSWORD: ${OPENMRS_DB_PASSWORD}
      DB_CREATE_TABLES: "true"
    volumes:
      - ./openmrs-modules:/usr/local/tomcat/.OpenMRS/modules/custom
      - ./openmrs-modules:/usr/local/tomcat/.OpenMRS/modules
      - ./openmrs-data:/usr/local/tomcat/.OpenMRS
    depends_on:
      mariadb:
        condition: service_healthy
    ports: ["8080:8080"]
    networks: [clinic-net]

  odoo:
    image: odoo:17
    restart: unless-stopped
    env_file: .env
    environment:
      HOST: postgres
    depends_on:
      postgres:
        condition: service_healthy
    ports: ["8069:8069"]
    networks: [clinic-net]

  nextcloud:
    image: nextcloud:29-apache
    restart: unless-stopped
    env_file: .env
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_DB: nextcloud
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      NEXTCLOUD_ADMIN_USER: admin
      NEXTCLOUD_ADMIN_PASSWORD: ${NEXTCLOUD_ADMIN_PASSWORD}
    depends_on:
      postgres:
        condition: service_healthy
    ports: ["8081:80"]
    volumes: [nextcloud_data:/var/www/html]
    networks: [clinic-net]

  # ---------- Seguridad ----------
  keycloak:
    image: quay.io/keycloak/keycloak:24.0.5
    command: start-dev --http-port=8082
    restart: unless-stopped
    env_file: .env
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      postgres:
        condition: service_healthy
    ports: ["8082:8082"]
    networks: [clinic-net]

  # ---------- Kong API Gateway ----------
  kong:
    image: cristianchiru/docker-kong-oidc:3.2.2-1
    restart: unless-stopped
    env_file: .env
    environment:
      KONG_PLUGINS: bundled,oidc
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /kong/kong.yml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: "0.0.0.0:8001"
    volumes:
      - ./src/kong/kong.yml:/kong/kong.yml:ro
    ports:
      - "8000:8000"
      - "8443:8443"
      - "8001:8001"
    networks: [clinic-net]

  # ---------- Mensajería ----------
  rabbitmq:
    image: rabbitmq:3.13-management
    restart: unless-stopped
    ports: ["5672:5672", "15672:15672"]
    volumes: [rabbitmq_data:/var/lib/rabbitmq]
    networks: [clinic-net]

  # ---------- Micro-servicios ----------
  bridge-billing:
    build: ./services/bridge-billing
    depends_on: [openmrs, odoo, rabbitmq]
    networks: [clinic-net]

  lab-uploader:
    build: ./services/lab-uploader
    depends_on: [nextcloud, openmrs, rabbitmq]
    volumes:
      - ./services/lab-uploader/new-results:/app/new-results:rw
    networks: [clinic-net]
